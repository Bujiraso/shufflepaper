#!/usr/bin/env bash
# sfp-stats
# Find the current wallpaper in the shufflepaper and prints its entry to
# stdout
#  Copyright (C) 2015 - 2019 Bujiraso

#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

subName="stats"

function __sfp-stats-readDB() {
    if [[ ${#} -eq 0 || "${1}" == "" ]]; then
        wallURI="$(sfp get-uri)"
    else
        wallURI="${1}"
    fi

    if [[ "$(sfp query 'SELECT count(*) FROM Wallpapers WHERE file_path="'"${wallURI}"'"')" -eq 0 ]]; then
        if [[ ! -f "${wallURI}" ]]; then
            # Wall does not exist.
            exit 1
        fi
        # File path must need updating
        list=$(ls -li "${wallURI}")
        if [[ "${?}" -eq 0 ]]; then
            inode=$(echo "${list}" | cut -f 1 -d ' ')
	    sfp query "UPDATE Wallpapers SET file_path=\"${wallURI}\" WHERE inode=${inode}"
        fi
        result="$(sfp query "SELECT * FROM Wallpapers WHERE inode=${inode}")"
        if [[ -z "${result}" ]]; then
            echo "${subName}: Error finding wallpaper"
            exit 1
        fi
    else
        result="$(sfp query "SELECT inode, hash, file_path, width, height, selected, view_count, star_rating, user_comments, view_mode FROM Wallpapers WHERE file_path=\"${wallURI}\"")"
    fi

    if [[ -z "${noheader}" ]]; then
        echo "Inode|Hash|File Path|Width|Height|Selected|View Count|Star Rating|User Comments|View Option"
    fi
    echo ${result}
}
export -f __sfp-stats-readDB


function __sfp-stats-help() {
    cat <<EOS
Usage: ${subName} [OPTIONS]

Options:
    -d         Print with pipe (|) delimiter
    -f         Use the given file instead of the current wallpaper
    -h         Print this help
    -n         Do not print the header column line
EOS
}

function __sfp-stats() {

    while getopts ":df:hn" opt; do
        case "${opt}" in
            "d") delimiter=true
                ;;
            "f") wallArg="$(readlink -f "${OPTARG}")"
                ;;
            "h") 
                __sfp-stats-help
                exit 0
                ;;
            "n") noheader=true
                ;;
        esac
    done
    output="$(__sfp-stats-readDB "${wallArg}")"
    ret=${?}
    if [[ "${ret}" -eq 0 ]]; then
        if [[ -z "${delimiter}" ]]; then
            echo "${output}" | column -s\| -t
        else
            echo "${output}"
        fi
    else
        exit "${ret}"
    fi
}

function sfp-stats() {
    __sfp-stats ${*}
}
