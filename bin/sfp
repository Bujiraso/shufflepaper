#!/usr/bin/env bash
# sfp
# The front-end for shufflepaper
#  Copyright (C) 2019 Bujiraso

#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Save this for later to tell if we are being sourced or run
entryPoint=${_}

export _SFP_LOG_FILE="${XDG_DATA_HOME}/shufflepaper/shufflepaper.log"
# Err -> to user on stderr and log file
function _sfp-err() {
    echo "${@}" | tee -a "${_SFP_LOG_FILE}" > /dev/stderr
}

# Info -> to user and log file
# Note that until we are not trafficking strings between scripts, we cannot print to stdout
function _sfp-info() {
    _sfp-err "${@}"
}

# Debug -> to log file only
function _sfp-dbug() {
    echo "${@}" >> "${_SFP_LOG_FILE}"
}

# Trace -> conditionally sent to both screen and log file
function _sfp-trace() {
    [[ ! -z ${SFP_TRACE+x} ]] && _sfp-err "${SFP_TRACE_DECORATION}${@}"
}

function __sfp-fe-commands-help() {
    cat <<EOS
Usage: $(basename "${0}") COMMAND

Available subcommands are:
$(compgen -c | grep -- '^sfp-[[:alpha:]-]*$' | sort | sed 's/sfp-/, /g;s/^, //' | column -c 80 | sed 's/^/\t/')
EOS
}

function sfp(){
    # Export logging commands
    export -f _sfp-err
    export -f _sfp-info
    export -f _sfp-dbug
    export -f _sfp-trace

    # Assert that sfp can be called by subcommands
    if ! which sfp 2> /dev/null > /dev/null; then
        sourceDir="$(dirname "$(readlink -f "${0}")")"
        if [[ ! -d "${sourceDir}" ]]; then
            echo "Cannot find sfp's source dir to execute subcommands through. Try installing sfp to your path" > /dev/stderr
            return 1
        fi
        export PATH="${PATH}:${sourceDir}"
    fi

    # Verify subcommand is present or print __sfp-fe-commands-help
    if [[ ${#} -eq 0 ]]; then
        _sfp-trace "No args received. Printing help"
        __sfp-fe-commands-help
        return 0
    fi

    # Set up sfp script source
    command="sfp-$(echo ${1} | sed 's/ /-/g')"
    _sfp-trace "User wants ${command}"
    # Shift to remove subcommand from its own args
    shift

    if ! which "${command}" >/dev/null 2>/dev/null; then
        echo "Invalid command ${command}" > /dev/stderr
        return 3
    fi

    # Source script and run its main function
    _sfp-trace "Sourcing ${command}"
    source "${command}"

    _sfp-trace "Running '${command} "${@}"'"
    ${command} "${@}"
    retVal="${?}"

    _sfp-trace "Done ${command}"
    return ${retVal}
}

# Source configuration file if we haven't yet and it exists
if [[ -z ${SFP_CONFIG_SET+x} && -f "${XDG_CONFIG_HOME}/shufflepaper/shufflepaper.conf" ]]; then
    _sfp-trace "sfp being sourced -- sourcing config"
   source "${XDG_CONFIG_HOME}/shufflepaper/shufflepaper.conf"
   export SFP_CONFIG_SET="done"
fi

[[ ${entryPoint} != ${0} ]] || sfp "${@}"
